# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

platform :ios, min_ios_version_supported
prepare_react_native_project!

# Enable modular headers globally
use_modular_headers!

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'fe_react_zuni_app_new' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    :app_path => "#{Pod::Config.instance.installation_root}/..",
    :fabric_enabled => false # Explicitly disable Fabric
  )

  # Explicitly enable modular headers for react-native-webrtc
  pod 'react-native-webrtc', :path => '../node_modules/react-native-webrtc', :modular_headers => true

  post_install do |installer|
    # Tắt cảnh báo non-modular headers và cấu hình build settings
    installer.pods_project.targets.each do |target|
      if ['react-native-webrtc'].include? target.name
        target.build_configurations.each do |config|
          # Tắt cảnh báo non-modular headers
          config.build_settings['CLANG_WARN_NON_MODULAR_INCLUDE_IN_FRAMEWORK_MODULE'] = 'NO'
          # Tắt header map để tránh xung đột
          config.build_settings['USE_HEADERMAP'] = 'NO'
        end
      end
    end

    # Cấu hình bổ sung để đảm bảo tương thích
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        # Đảm bảo build với iOS 12.0 trở lên
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.0'
      end
    end

    # React Native post-install
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
    )
  end
end